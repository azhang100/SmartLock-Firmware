//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : AccelerometerObserver.h
//  @ Date : 7/14/2015
//  @ Author : 
//
//


#if !defined(_ACCELEROMETEROBSERVER_H)
#define _ACCELEROMETEROBSERVER_H

#include "Observer.h"
#include "Cartesian.h"
class AccelerometerSubject;

class AccelerometerObserver : public Observer {
public:
	AccelerometerObserver( AccelerometerSubject * subject, float alpha = 0.2 );
	struct EulerAngles {
		// phi, theta, psi
		// place Euler angles with alpha, omega, theta here
	};
	virtual void Update();
	virtual void getCart(Cartesian * cart, int raw = 0);
//	virtual void getEuler(EulerAngles * euler);
protected:
	Cartesian rawAccel;
//	EulerAngles rawEuler;
	Cartesian filtAccel;
//	EulerAngles filtEuler;
	virtual void updateCart();
//	virtual void updateEuler();
	float LPFalpha;
#ifdef ACCELEROMETER_OBSERVER_DEBUG
	static const char * SPACE = " ";
#endif
};

#endif  //_ACCELEROMETEROBSERVER_H
