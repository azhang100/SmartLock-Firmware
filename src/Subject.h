//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Subject.h
//  @ Date : 7/14/2015
//  @ Author : 
//
//


#if !defined(_SUBJECT_H)
#define _SUBJECT_H

#include "Runnable.h"
class Observer;

#define MAX_OBSERVERS 5
class Subject : public Runnable {
public:
	Subject();
	virtual int Attach(Observer * newObserver);
	virtual int Detach(Observer * oldObserver);
	virtual void Notify();
	virtual void timeSlice() = 0;

private:
	// this is an adaptation to embedded use
	// we won't make a dynamic observer list,
	// just a fixed length array - we can return
	// an error indication if we get an Attach that can't
	// be satisfied and leave it to the Observer to deal
	// with the error
	Observer * myObservers[MAX_OBSERVERS];
};

#endif  //_SUBJECT_H
