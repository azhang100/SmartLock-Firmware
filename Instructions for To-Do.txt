=======================================================
Protocol function
=======================================================

The names are for explanation, change them if you want.)

-Write a class or dict or whatever you want with two properties: the operator, and a function.  Call  it "functions" for now
	-give me some sample code so I know how to add stuff to it.
	-For some reason there's not dictionaries in C?  I would use a dictionary, but anyways, do it however you want.
-Write a first-order function named "executeCommand" that takes a string in the following comma separated format "prefix,operator,operand"
	-details in the protocol text file (do NOT hard-code them)
	-The prefix does nothing
	-the operator determines which function to execute (from the "functions" array)
	-the operand is the argument said function is given.  There is no need to change the type, leave it as a string for consistency (the people that write the actual functions can write helper functions themselves.  By the way when I say "string" I really have no clue what I'm talking about, use whatever data structure you want but keep it consistent.)
-Give me your two converter functions (let's call them one of them "converter").  They should convert from your choice of data structure to int, and from your choice of data structure to char.  I say "give me" because I don't know if there are already built-in functions that do this, and I'm only asking for this because I don't know how to do it myself.

The usage should be as such:

//============================

void rotateCommand(char pos){//my code}

void rotateCommandHelper(yourDataStructure pos)
{rotateCommand(converter(pos));}

functions['rotate'] = rotateCommandHelper; // However you decide to implement this, please show me how to add things to your library/array/whatever.  In other words re-write this line.

void loop(){
//stuff
executeCommand(',rotate,180');
//stuff
}

//============================

Basically I want a first order function.  I'm going to be receiving strings, and depending on the string I receive it activates different functions that actually do stuff.
I want to program the actual functions myself, and add whatever functions I want so you can't hardcode any of the mappings.

This function will basically handle all commands sent to the simsim over serial.

Also it might be easier if the protocol were rewritten as op-codes (so replace the operation item with an ascii character corresponding to a byte corresponding to an op code or some similar method of encoding, so we have a set number of characters in the string or something).  And maybe all the arguments will be integers or characters, instead of a generic string.  If an actual ECE/CS major could make the judgement on that...

=======================================================
==================MEMORY==============================
=======================================================

Requesting another code, also not high-priority.  Here it is in a mix of python and C; I need it in C.

class constant {
void __init__(self, int address){
int address = address;
int x
self.read();
}
int read(){self.x = EEPROM.read(self.address); return EEPROM.read(self.address);}
int write(int val){EEPROM.write(self.address, val);}

===

basically a class or a struct with a data, an address, a read-from-address function, and a write-to-address function.